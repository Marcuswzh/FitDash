@page "/meals/delete"
@using Microsoft.EntityFrameworkCore
@using FitDash.Domain
@inject IDbContextFactory<FitDash.Data.FitDashContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Meal</h2>
    <hr />
    @if (meal is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserID</dt>
            <dd class="col-sm-10">@meal.UserID</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MealName</dt>
            <dd class="col-sm-10">@meal.MealName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Calories</dt>
            <dd class="col-sm-10">@meal.Calories</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Proteins</dt>
            <dd class="col-sm-10">@meal.Proteins</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Fats</dt>
            <dd class="col-sm-10">@meal.Fats</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Carbs</dt>
            <dd class="col-sm-10">@meal.Carbs</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MealDate</dt>
            <dd class="col-sm-10">@meal.MealDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@meal.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@meal.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@meal.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@meal.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="meal" OnValidSubmit="DeleteMeal" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(meal is null)">Delete</button> |
            <a href="/meals">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Meal? meal;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        meal = await context.Meal.FirstOrDefaultAsync(m => m.Id == Id);

        if (meal is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteMeal()
    {
        using var context = DbFactory.CreateDbContext();
        context.Meal.Remove(meal!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/meals");
    }
}
