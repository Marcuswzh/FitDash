@page "/progresstrackers/delete"
@using Microsoft.EntityFrameworkCore
@using FitDash.Domain
@inject IDbContextFactory<FitDash.Data.FitDashContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>ProgressTracker</h2>
    <hr />
    @if (progresstracker is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">UserID</dt>
            <dd class="col-sm-10">@progresstracker.UserID</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateRecorded</dt>
            <dd class="col-sm-10">@progresstracker.DateRecorded</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Weight</dt>
            <dd class="col-sm-10">@progresstracker.Weight</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BMI</dt>
            <dd class="col-sm-10">@progresstracker.BMI</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BodyFatPercentage</dt>
            <dd class="col-sm-10">@progresstracker.BodyFatPercentage</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@progresstracker.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@progresstracker.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@progresstracker.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@progresstracker.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="progresstracker" OnValidSubmit="DeleteProgressTracker" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(progresstracker is null)">Delete</button> |
            <a href="/progresstrackers">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private ProgressTracker? progresstracker;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        progresstracker = await context.ProgressTrackers.FirstOrDefaultAsync(m => m.Id == Id); // Corrected DbSet name

        if (progresstracker is null)
        {
            NavigationManager.NavigateTo("/notfound"); // Ensure '/notfound' exists
        }
    }

    private async Task DeleteProgressTracker()
    {
        if (progresstracker is not null)
        {
            using var context = DbFactory.CreateDbContext();
            context.ProgressTrackers.Remove(progresstracker);  // Corrected DbSet name
            await context.SaveChangesAsync();
            NavigationManager.NavigateTo("/progresstrackers");
        }
        else
        {
            NavigationManager.NavigateTo("/progresstrackers"); // Optional: Redirect if not found
        }
    }
}
